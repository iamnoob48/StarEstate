// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Gender {
  MALE
  FEMALE
  OTHERS
}

model User {
  id               Int        @id @default(autoincrement())
  username         String     @unique
  email            String     @unique
  gender           Gender?
  password         String?
  googleId         String?    @unique
  property         Property[]
  sentMessages     Message[]  @relation("SentMessages")
  receivedMessages Message[]  @relation("ReceivedMessages")
}

model Property {
  id           Int     @id @default(autoincrement())
  user_id      Int
  title        String
  smallDesc    String?
  detailedDesc String?
  price        Int
  propertyType String
  category     String
  area         Int     @default(0)
  bedrooms     Int     @default(0)
  bathrooms    Int     @default(0)
  balconies    Int?
  floor        Int?
  totalFloors  Int?
  furnishing   String?
  parking      String?

  address   String
  city      String
  state     String
  country   String  @default("India")
  pincode   String
  landmarks String?

  // new fields for contact info
  contactName  String?
  contactPhone String?
  contactEmail String?

  rating      Float @default(0.0)
  ratingCount Int   @default(0)

  isSoldOut Boolean @default(false)

  isDeleted Boolean @default(false)

  user   User    @relation(fields: [user_id], references: [id])
  images Image[]
}

model Image {
  id          Int    @id @default(autoincrement())
  property_id Int
  image_url   String

  property Property @relation(fields: [property_id], references: [id])
}

model Message {
  id         Int      @id @default(autoincrement())
  senderId   Int
  receiverId Int
  content    String
  createdAt  DateTime @default(now())
  isRead     Boolean  @default(false)

  sender   User @relation("SentMessages", fields: [senderId], references: [id])
  receiver User @relation("ReceivedMessages", fields: [receiverId], references: [id])
}
